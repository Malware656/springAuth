package com.malware.springauth.exception;

import com.malware.springauth.model.responseModel.ResponseToUser;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import javax.validation.ConstraintViolationException;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Calendar;

@ControllerAdvice
public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
    @ExceptionHandler
    ResponseEntity<?> springAuthException(SpringAuthenticationException e){
        ResponseToUser response = new ResponseToUser("Authentication Exception", e.getMessage(), e.getErrorCode(), HttpStatus.NOT_ACCEPTABLE, Calendar.getInstance().getTime());
        return ResponseEntity.badRequest().body(response);
    }

    @ExceptionHandler
    ResponseEntity<?> customException(CustomException e){
        ResponseToUser response = new ResponseToUser("Simple Exception", e.getError().name(), e.getErrorCode(), HttpStatus.NOT_ACCEPTABLE, Calendar.getInstance().getTime());
        return ResponseEntity.badRequest().body(response);
    }

    @ExceptionHandler
    ResponseEntity<?> emailValException(ConstraintViolationException e) {
        ResponseToUser response = new ResponseToUser(Arrays.toString(e.getConstraintViolations().toArray()), e.getMessage(), -1, HttpStatus.NOT_ACCEPTABLE, Calendar.getInstance().getTime());
        return ResponseEntity.badRequest().body(response);
    }

    @ExceptionHandler
    ResponseEntity<?> sqlException(SQLException e){
        ResponseToUser response = new ResponseToUser("MySQL Exception", e.getMessage(), e.getErrorCode(), HttpStatus.NOT_ACCEPTABLE, Calendar.getInstance().getTime());
        return ResponseEntity.badRequest().body(response);
    }
}
