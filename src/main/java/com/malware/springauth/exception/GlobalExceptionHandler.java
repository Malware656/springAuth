package com.malware.springauth.exception;

import com.malware.springauth.model.responseModel.ResponseToUser;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import java.sql.SQLException;
import java.util.Calendar;

@ControllerAdvice
public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
    @ExceptionHandler
    ResponseEntity<?> springAuthException(SpringAuthenticationException e){
        ResponseToUser response = new ResponseToUser();
        response.setDateTime(Calendar.getInstance().getTime());
        response.setDebugMessage(e.getMessage());
        response.setErrorCode(e.getErrorCode());
        response.setMessage("Authentication Exception");
        response.setStatus(HttpStatus.BAD_REQUEST);
        return ResponseEntity.badRequest().body(response);
    }

    @ExceptionHandler
    ResponseEntity<?> customException(CustomException e){
        ResponseToUser response = new ResponseToUser();
        response.setDateTime(Calendar.getInstance().getTime());
        response.setDebugMessage(e.getError().name());
        response.setErrorCode(e.getErrorCode());
        response.setMessage("Simple Exception");
        response.setStatus(HttpStatus.NOT_ACCEPTABLE);
        return ResponseEntity.badRequest().body(response);
    }

    @ExceptionHandler
    ResponseEntity<?> sqlException(SQLException e){
        ResponseToUser response = new ResponseToUser();
        response.setDateTime(Calendar.getInstance().getTime());
        response.setDebugMessage(e.getMessage());
        response.setErrorCode(e.getErrorCode());
        response.setMessage("MySQL Exception");
        response.setStatus(HttpStatus.NOT_ACCEPTABLE);
        return ResponseEntity.badRequest().body(response);
    }
}
